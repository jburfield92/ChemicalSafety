/*
Deployment script for Database1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Database1"
:setvar DefaultFilePrefix "Database1"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)] COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[OrganizedBy]...';


GO
CREATE TABLE [dbo].[OrganizedBy] (
    [EventID] INT NOT NULL,
    [RSOID]   INT NOT NULL,
    PRIMARY KEY CLUSTERED ([EventID] ASC, [RSOID] ASC)
);


GO
PRINT N'Creating [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [UserID]       UNIQUEIDENTIFIER NOT NULL,
    [UserName]     CHAR (64)        NOT NULL,
    [FirstName]    CHAR (64)        NOT NULL,
    [LastName]     CHAR (64)        NOT NULL,
    [PasswordSalt] VARCHAR (128)    NOT NULL,
    [PasswordHash] VARCHAR (128)    NOT NULL,
    [Email]        VARCHAR (100)    NOT NULL,
    [IsSuperAdmin] BIT              NOT NULL,
    [Picture]      IMAGE            NULL,
    [UniversityID] INT              NULL,
    PRIMARY KEY CLUSTERED ([UserID] ASC)
);


GO
PRINT N'Creating [dbo].[EventComment]...';


GO
CREATE TABLE [dbo].[EventComment] (
    [CommentID] INT              NOT NULL,
    [EventID]   INT              NOT NULL,
    [UserID]    UNIQUEIDENTIFIER NOT NULL,
    [Comment]   TEXT             NULL,
    [Time]      DATETIME         NOT NULL,
    PRIMARY KEY CLUSTERED ([CommentID] ASC)
);


GO
PRINT N'Creating [dbo].[AssociatedWith]...';


GO
CREATE TABLE [dbo].[AssociatedWith] (
    [UniversityID] INT NOT NULL,
    [EventID]      INT NOT NULL,
    PRIMARY KEY CLUSTERED ([UniversityID] ASC, [EventID] ASC)
);


GO
PRINT N'Creating [dbo].[Location]...';


GO
CREATE TABLE [dbo].[Location] (
    [LocationID] INT        IDENTITY (1, 1) NOT NULL,
    [Address]    CHAR (128) NOT NULL,
    PRIMARY KEY CLUSTERED ([LocationID] ASC)
);


GO
PRINT N'Creating [dbo].[EventType]...';


GO
CREATE TABLE [dbo].[EventType] (
    [EventTypeID] INT       IDENTITY (1, 1) NOT NULL,
    [Name]        CHAR (64) NOT NULL,
    PRIMARY KEY CLUSTERED ([EventTypeID] ASC)
);


GO
PRINT N'Creating [dbo].[Event Category]...';


GO
CREATE TABLE [dbo].[Event Category] (
    [EventCategoryID] INT       IDENTITY (1, 1) NOT NULL,
    [Name]            CHAR (64) NOT NULL,
    PRIMARY KEY CLUSTERED ([EventCategoryID] ASC)
);


GO
PRINT N'Creating [dbo].[EventRating]...';


GO
CREATE TABLE [dbo].[EventRating] (
    [EventRatingID] INT              IDENTITY (1, 1) NOT NULL,
    [UserID]        UNIQUEIDENTIFIER NOT NULL,
    [EventID]       INT              NOT NULL,
    [Rating]        FLOAT (53)       NULL,
    PRIMARY KEY CLUSTERED ([EventRatingID] ASC, [UserID] ASC, [EventID] ASC)
);


GO
PRINT N'Creating [dbo].[Member]...';


GO
CREATE TABLE [dbo].[Member] (
    [RSOMemberID] INT              IDENTITY (1, 1) NOT NULL,
    [RSOID]       INT              NOT NULL,
    [UserID]      UNIQUEIDENTIFIER NOT NULL,
    [Name]        CHAR (64)        NOT NULL,
    [JoinDate]    DATE             NOT NULL,
    [Approved]    BIT              NOT NULL,
    PRIMARY KEY CLUSTERED ([RSOMemberID] ASC, [RSOID] ASC, [UserID] ASC)
);


GO
PRINT N'Creating [dbo].[Event]...';


GO
CREATE TABLE [dbo].[Event] (
    [EventID]         INT        IDENTITY (1, 1) NOT NULL,
    [EventName]       CHAR (64)  NOT NULL,
    [DatePublished]   DATE       NOT NULL,
    [Approved]        BIT        NOT NULL,
    [ContactPhone]    INT        NULL,
    [ContactEmail]    CHAR (100) NULL,
    [Description]     TEXT       NOT NULL,
    [Time]            DATETIME   NOT NULL,
    [Date]            DATE       NOT NULL,
    [HasALocationID]  INT        NOT NULL,
    [HasAEventTypeID] INT        NOT NULL,
    [HasAEventCatID]  INT        NOT NULL,
    [Picture]         IMAGE      NULL,
    CONSTRAINT [PK_Table2] PRIMARY KEY CLUSTERED ([EventID] ASC)
);


GO
PRINT N'Creating [dbo].[Comment]...';


GO
CREATE TABLE [dbo].[Comment] (
    [CommentID] INT  IDENTITY (1, 1) NOT NULL,
    [Comment]   TEXT NULL
);


GO
PRINT N'Creating [dbo].[Attends]...';


GO
CREATE TABLE [dbo].[Attends] (
    [UserID]    UNIQUEIDENTIFIER NOT NULL,
    [EventID]   INT              NOT NULL,
    [AttendyID] INT              IDENTITY (1, 1) NOT NULL,
    PRIMARY KEY CLUSTERED ([AttendyID] ASC)
);


GO
PRINT N'Creating [dbo].[University]...';


GO
CREATE TABLE [dbo].[University] (
    [UniversityID] INT              IDENTITY (1, 1) NOT NULL,
    [Name]         CHAR (64)        NOT NULL,
    [Description]  TEXT             NOT NULL,
    [CreatedDate]  DATE             NOT NULL,
    [SuperAdminID] UNIQUEIDENTIFIER NOT NULL,
    [LocationID]   INT              NOT NULL,
    [Picture]      IMAGE            NULL,
    PRIMARY KEY CLUSTERED ([UniversityID] ASC)
);


GO
PRINT N'Creating [dbo].[RSO]...';


GO
CREATE TABLE [dbo].[RSO] (
    [RSOID]        INT              IDENTITY (1, 1) NOT NULL,
    [Name]         CHAR (64)        NOT NULL,
    [Approved]     BIT              NOT NULL,
    [Description]  TEXT             NOT NULL,
    [CreatedDate]  DATE             NOT NULL,
    [AdminID]      UNIQUEIDENTIFIER NOT NULL,
    [UniversityID] INT              NOT NULL,
    [Picture]      IMAGE            NULL,
    PRIMARY KEY CLUSTERED ([RSOID] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[User]...';


GO
ALTER TABLE [dbo].[User]
    ADD DEFAULT 0 FOR [IsSuperAdmin];


GO
PRINT N'Creating unnamed constraint on [dbo].[Member]...';


GO
ALTER TABLE [dbo].[Member]
    ADD DEFAULT 0 FOR [Approved];


GO
PRINT N'Creating unnamed constraint on [dbo].[Event]...';


GO
ALTER TABLE [dbo].[Event]
    ADD DEFAULT 0 FOR [Approved];


GO
PRINT N'Creating unnamed constraint on [dbo].[RSO]...';


GO
ALTER TABLE [dbo].[RSO]
    ADD DEFAULT 0 FOR [Approved];


GO
PRINT N'Creating [dbo].[FK_OrganizedBy_Events]...';


GO
ALTER TABLE [dbo].[OrganizedBy]
    ADD CONSTRAINT [FK_OrganizedBy_Events] FOREIGN KEY ([EventID]) REFERENCES [dbo].[Event] ([EventID]);


GO
PRINT N'Creating [dbo].[FK_OrganizedBy_RSO]...';


GO
ALTER TABLE [dbo].[OrganizedBy]
    ADD CONSTRAINT [FK_OrganizedBy_RSO] FOREIGN KEY ([RSOID]) REFERENCES [dbo].[RSO] ([RSOID]);


GO
PRINT N'Creating [dbo].[FK_User_ToTable]...';


GO
ALTER TABLE [dbo].[User]
    ADD CONSTRAINT [FK_User_ToTable] FOREIGN KEY ([UniversityID]) REFERENCES [dbo].[University] ([UniversityID]);


GO
PRINT N'Creating [dbo].[FK_EventComment_Event]...';


GO
ALTER TABLE [dbo].[EventComment]
    ADD CONSTRAINT [FK_EventComment_Event] FOREIGN KEY ([EventID]) REFERENCES [dbo].[Event] ([EventID]);


GO
PRINT N'Creating [dbo].[FK_EventComment_User]...';


GO
ALTER TABLE [dbo].[EventComment]
    ADD CONSTRAINT [FK_EventComment_User] FOREIGN KEY ([UserID]) REFERENCES [dbo].[User] ([UserID]);


GO
PRINT N'Creating [dbo].[FK_AssociatedWith_University]...';


GO
ALTER TABLE [dbo].[AssociatedWith]
    ADD CONSTRAINT [FK_AssociatedWith_University] FOREIGN KEY ([UniversityID]) REFERENCES [dbo].[University] ([UniversityID]);


GO
PRINT N'Creating [dbo].[FK_AssociatedWith_Event]...';


GO
ALTER TABLE [dbo].[AssociatedWith]
    ADD CONSTRAINT [FK_AssociatedWith_Event] FOREIGN KEY ([EventID]) REFERENCES [dbo].[Event] ([EventID]);


GO
PRINT N'Creating [dbo].[FK_Member_User]...';


GO
ALTER TABLE [dbo].[Member]
    ADD CONSTRAINT [FK_Member_User] FOREIGN KEY ([UserID]) REFERENCES [dbo].[User] ([UserID]);


GO
PRINT N'Creating [dbo].[FK_Member_RSO]...';


GO
ALTER TABLE [dbo].[Member]
    ADD CONSTRAINT [FK_Member_RSO] FOREIGN KEY ([RSOID]) REFERENCES [dbo].[RSO] ([RSOID]);


GO
PRINT N'Creating [dbo].[FK_Event_Location]...';


GO
ALTER TABLE [dbo].[Event]
    ADD CONSTRAINT [FK_Event_Location] FOREIGN KEY ([HasALocationID]) REFERENCES [dbo].[Location] ([LocationID]);


GO
PRINT N'Creating [dbo].[FK_Table2_ToTable]...';


GO
ALTER TABLE [dbo].[Event]
    ADD CONSTRAINT [FK_Table2_ToTable] FOREIGN KEY ([HasAEventTypeID]) REFERENCES [dbo].[EventType] ([EventTypeID]);


GO
PRINT N'Creating [dbo].[FK_Table2_ToTable_1]...';


GO
ALTER TABLE [dbo].[Event]
    ADD CONSTRAINT [FK_Table2_ToTable_1] FOREIGN KEY ([HasAEventCatID]) REFERENCES [dbo].[Event Category] ([EventCategoryID]);


GO
PRINT N'Creating [dbo].[FK_Comment_ToTable]...';


GO
ALTER TABLE [dbo].[Comment]
    ADD CONSTRAINT [FK_Comment_ToTable] FOREIGN KEY ([CommentID]) REFERENCES [dbo].[EventComment] ([CommentID]);


GO
PRINT N'Creating [dbo].[FK_Attends_User]...';


GO
ALTER TABLE [dbo].[Attends]
    ADD CONSTRAINT [FK_Attends_User] FOREIGN KEY ([UserID]) REFERENCES [dbo].[User] ([UserID]);


GO
PRINT N'Creating [dbo].[FK_Attends_Event]...';


GO
ALTER TABLE [dbo].[Attends]
    ADD CONSTRAINT [FK_Attends_Event] FOREIGN KEY ([EventID]) REFERENCES [dbo].[Event] ([EventID]);


GO
PRINT N'Creating [dbo].[FK_University_ToTable]...';


GO
ALTER TABLE [dbo].[University]
    ADD CONSTRAINT [FK_University_ToTable] FOREIGN KEY ([SuperAdminID]) REFERENCES [dbo].[User] ([UserID]);


GO
PRINT N'Creating [dbo].[FK_University_ToTable_1]...';


GO
ALTER TABLE [dbo].[University]
    ADD CONSTRAINT [FK_University_ToTable_1] FOREIGN KEY ([LocationID]) REFERENCES [dbo].[Location] ([LocationID]);


GO
PRINT N'Creating [dbo].[FK_RSO_User]...';


GO
ALTER TABLE [dbo].[RSO]
    ADD CONSTRAINT [FK_RSO_User] FOREIGN KEY ([AdminID]) REFERENCES [dbo].[User] ([UserID]);


GO
PRINT N'Creating [dbo].[FK_RSO_UniversityID]...';


GO
ALTER TABLE [dbo].[RSO]
    ADD CONSTRAINT [FK_RSO_UniversityID] FOREIGN KEY ([UniversityID]) REFERENCES [dbo].[University] ([UniversityID]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd4a349c9-8ed6-42b4-8d5f-3affb72fe2d7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d4a349c9-8ed6-42b4-8d5f-3affb72fe2d7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '79862ae9-2734-427c-b973-3b478e5ae39e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('79862ae9-2734-427c-b973-3b478e5ae39e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cbd6ce6f-5dc3-4551-a929-371eb2745f5f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cbd6ce6f-5dc3-4551-a929-371eb2745f5f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c8c9ac7c-11ad-4811-8f3e-dffdb42fffc7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c8c9ac7c-11ad-4811-8f3e-dffdb42fffc7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1d47ccca-c2e9-49a6-8d91-4f6f24c1a6b0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1d47ccca-c2e9-49a6-8d91-4f6f24c1a6b0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1322a9d3-d9fa-4f72-85a8-3c6bfe5e236a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1322a9d3-d9fa-4f72-85a8-3c6bfe5e236a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3e8ae6c1-24b9-41ad-89ff-96c6d0b1aeeb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3e8ae6c1-24b9-41ad-89ff-96c6d0b1aeeb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'aaf6143d-4006-4fec-a270-a433e7708ba0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('aaf6143d-4006-4fec-a270-a433e7708ba0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dfd7febd-fe83-4b16-8962-3a642cb91301')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dfd7febd-fe83-4b16-8962-3a642cb91301')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '635ff7e0-2f84-4d9e-adbc-9e54dc681eb3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('635ff7e0-2f84-4d9e-adbc-9e54dc681eb3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '19ff1d4d-cbff-4611-ae00-376c515fb312')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('19ff1d4d-cbff-4611-ae00-376c515fb312')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fd3b5ffe-2caf-4206-8dad-8312a175a069')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fd3b5ffe-2caf-4206-8dad-8312a175a069')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '82946ed9-8374-40d1-b845-a719bef4357e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('82946ed9-8374-40d1-b845-a719bef4357e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd31b2dec-2a25-4856-a941-dacce1419dba')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d31b2dec-2a25-4856-a941-dacce1419dba')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '754554bd-19fc-45af-8bae-7a3022cc0612')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('754554bd-19fc-45af-8bae-7a3022cc0612')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bf55612e-c2e5-45c5-9eb3-5af787cc52fd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bf55612e-c2e5-45c5-9eb3-5af787cc52fd')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '719ef8a2-8909-464e-bddc-7ff601ed4153')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('719ef8a2-8909-464e-bddc-7ff601ed4153')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6f7ae223-c77e-456e-bf22-b9f07f3db776')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6f7ae223-c77e-456e-bf22-b9f07f3db776')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a5a0fd5a-95c5-4c76-96f4-0a42e14c9f23')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a5a0fd5a-95c5-4c76-96f4-0a42e14c9f23')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f1bb77d0-1472-422d-96a7-fff632785f60')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f1bb77d0-1472-422d-96a7-fff632785f60')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '301b30b1-89d6-4690-b6d5-71a4ed2a5169')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('301b30b1-89d6-4690-b6d5-71a4ed2a5169')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '83c60ac1-afd9-4ba0-ae56-becc8c6a2f1f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('83c60ac1-afd9-4ba0-ae56-becc8c6a2f1f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8c29db78-5e1a-4c58-86bb-32fb024cd8f3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8c29db78-5e1a-4c58-86bb-32fb024cd8f3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '00f1d820-5a20-4711-bba3-3519374de201')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('00f1d820-5a20-4711-bba3-3519374de201')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5a525fde-ea8f-4d3c-b0e5-a1731e632dcd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5a525fde-ea8f-4d3c-b0e5-a1731e632dcd')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd548d849-8494-47fb-b80e-b7a958b860fa')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d548d849-8494-47fb-b80e-b7a958b860fa')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'da331765-5c94-4468-ba6e-2f3c07bc681f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('da331765-5c94-4468-ba6e-2f3c07bc681f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4115c2dc-34bd-455a-94c9-0c056e9ff5fe')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4115c2dc-34bd-455a-94c9-0c056e9ff5fe')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7ed486d2-233d-4eee-b3c9-cc96570062d5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7ed486d2-233d-4eee-b3c9-cc96570062d5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '03ee71b8-6639-4c31-b9ef-495dc1d2014a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('03ee71b8-6639-4c31-b9ef-495dc1d2014a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd8eee84a-cf41-424d-ac3f-b63773e13444')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d8eee84a-cf41-424d-ac3f-b63773e13444')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '114be5be-019a-4f76-bbf9-f971227d7601')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('114be5be-019a-4f76-bbf9-f971227d7601')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '243380d9-ef02-461a-80d3-6d1c67a034f0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('243380d9-ef02-461a-80d3-6d1c67a034f0')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET MULTI_USER 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Update complete.';


GO
